<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>RangerMSP-update-Crmemployee-nodes</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <pipeline_status>0</pipeline_status>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2020/01/03 22:40:31.737</created_date>
    <modified_user>admin</modified_user>
    <modified_date>2020/01/05 12:32:41.443</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>Query RangerMSP Contact (cards) table</from>
      <to>Create (:Rangeremployee) nodes for new contacts</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get Last Crmemployee</from>
      <to>Query RangerMSP modified Crmemployee (cards) table</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Query RangerMSP modified Crmemployee (cards) table</from>
      <to>Edit (:Rangeremployee) nodes for modified employees</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get job variables</from>
      <to>Update Job/TFLogging</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get Last Crmemployee</from>
      <to>Query RangerMSP Contact (cards) table</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>Create (:Rangeremployee) nodes for new contacts</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>
UNWIND $employees as row
MATCH (r:Recordstatus{state:row.accountstatus})
MERGE (c:Rangeremployee {acctrecid:row.recid})
ON CREATE SET c.company=row.company,c.title=row.title,c.email=trim(toLower(row.email1)),c.name=row.contact,c.createdon=datetime(row.createdate).epochmillis,c.updatedon=datetime(row.updatedate).epochmillis
MERGE (c)-[:ACCOUNT_STATE]->(r)</cypher>
    <batch_size>500</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>employees</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>recid</parameter>
        <field>recid</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>accountstatus</parameter>
        <field>accountstatus</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>bcrecid</parameter>
        <field>bcrecid</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>city</parameter>
        <field>city</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>kind</parameter>
        <field>kind</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>cardid3</parameter>
        <field>cardid3</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>company</parameter>
        <field>company</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>createdate</parameter>
        <field>createdate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>updatedate</parameter>
        <field>updatedate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>title</parameter>
        <field>title</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>email1</parameter>
        <field>email1</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>contact</parameter>
        <field>contact</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>assigncardid</parameter>
        <field>assigncardid</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns/>
    <attributes/>
    <GUI>
      <xloc>880</xloc>
      <yloc>112</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Edit (:Rangeremployee) nodes for modified employees</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>UNWIND $employees as row
MATCH (c:Rangeremployee {acctrecid:row.recid})
OPTIONAL MATCH (r:Recordstatus {state:row.accountstatus})
OPTIONAL MATCH (c)-[asr:ACCOUNT_STATE]-(ors:Recordstatus)
FOREACH (ignoreMe in CASE WHEN (row.accountstatus &lt;&gt; ors.state) THEN [1] ELSE [] END | DELETE asr)
FOREACH (ignoreMe in CASE WHEN (row.contact &lt;&gt; c.name) THEN [1] ELSE [] END | set c.name=row.contact)
FOREACH (ignoreMe in CASE WHEN (row.title &lt;&gt; c.title) THEN [1] ELSE [] END | set c.title=row.title)
FOREACH (ignoreMe in CASE WHEN (row.email1 &lt;&gt; c.email) THEN [1] ELSE [] END | set c.email=row.email1)
WITH c,r
MERGE (c)-[:ACCOUNT_STATE]->(r)
;
</cypher>
    <batch_size>100</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>employees</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>recid</parameter>
        <field>recid</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>accountstatus</parameter>
        <field>accountstatus</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>bcrecid</parameter>
        <field>bcrecid</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>city</parameter>
        <field>city</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>kind</parameter>
        <field>kind</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>cardid3</parameter>
        <field>cardid3</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>company</parameter>
        <field>company</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>createdate</parameter>
        <field>createdate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>updatedate</parameter>
        <field>updatedate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>title</parameter>
        <field>title</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>email1</parameter>
        <field>email1</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>contact</parameter>
        <field>contact</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>assigncardid</parameter>
        <field>assigncardid</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns/>
    <attributes/>
    <GUI>
      <xloc>912</xloc>
      <yloc>208</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Find inactive employees with incorrect relationship</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>MATCH (e:Rangeremployee)-[r:WORKS_FOR]-(:Company) where (e)--(:Recordstatus {state:'N'})
DELETE r
;
</cypher>
    <batch_size>100</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map/>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns/>
    <attributes/>
    <GUI>
      <xloc>384</xloc>
      <yloc>560</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get Last Crmemployee</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>MATCH (cdl:Rangerdataload {name:'RangerMSP'})
OPTIONAL MATCH (l:Rangeremployee)
WITH max(coalesce(l.createdon,0)) as lastnewemployee, max(coalesce(l.updatedon,0)) as lastmodifiedemployee,cdl
WITH COLLECT(lastnewemployee)+COLLECT(lastmodifiedemployee)+cdl.crminit as tstamps
UNWIND tstamps as ts
WITH min(ts) as lastmodifiedemployee
WITH apoc.date.format(coalesce(lastmodifiedemployee,0),'ms','yyyy-MM-dd HH:mm:ss.sss','CST') AS lastmodifiedemployee
//RETURN '1990-08-14 14:34:40.040' as lastmodifiedemployee
RETURN lastmodifiedemployee
;</cypher>
    <batch_size/>
    <read_only>Y</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map/>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns>
      <return>
        <name>lastmodifiedemployee</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>272</xloc>
      <yloc>160</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get job variables</name>
    <type>GetVariable</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>jobname</name>
        <variable> ${Internal.Workflow.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>transname</name>
        <variable>${Internal.Pipeline.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>tdir</name>
        <variable>${Internal.Pipeline.Filename.Folder}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>jdir</name>
        <variable>${Internal.Workflow.Filename.Folder}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>jfilename</name>
        <variable>${Internal.Workflow.Filename.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>tfilename</name>
        <variable>${Internal.Pipeline.Filename.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>224</xloc>
      <yloc>672</yloc>
    </GUI>
  </transform>
  <transform>
    <name>MATCH active bluenetinc :Rangeremployees and create [:WORKS_FOR] relationship</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>MATCH (a:Company {acctrecid:'CRD6UWAT3SRJXHOT6F2C'})
MATCH (e:Rangeremployee)--(:Recordstatus {state:'A'}) where not (e)-[:WORKS_FOR]-(a) and e.email ends with 'bluenetinc.com'
MERGE (e)-[:WORKS_FOR]->(a)
;
</cypher>
    <batch_size>100</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map/>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns/>
    <attributes/>
    <GUI>
      <xloc>384</xloc>
      <yloc>400</yloc>
    </GUI>
  </transform>
  <transform>
    <name>MATCH inactive bluenetinc :Rangeremployees and create [:FORMERLY_WORKED_FOR] relationship</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>MATCH (a:Company {acctrecid:'CRD6UWAT3SRJXHOT6F2C'})
MATCH (e:Rangeremployee)--(:Recordstatus {state:'N'}) where not (e)-[:FORMERLY_WORKED_FOR]-(a) and e.email ends with 'bluenetinc.com'
MERGE (e)-[:FORMERLY_WORKED_FOR]->(a)
;
</cypher>
    <batch_size>100</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map/>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns/>
    <attributes/>
    <GUI>
      <xloc>384</xloc>
      <yloc>480</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Query RangerMSP Contact (cards) table</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${RangerMSP-ds}</connection>
    <execute_each_row>N</execute_each_row>
    <lookup>Get Last Crmemployee</lookup>
    <limit>0</limit>
    <sql>SELECT recid,accountstatus,bcrecid,city,kind,cardid3,company,createdate,updatedate,title,email1,contact,assigncardid from cards where entitykind=4 and KIND='$$***WORKER***$$'  and RECID is not null AND CREATEDATE > ?</sql>
    <variables_active>Y</variables_active>
    <attributes/>
    <GUI>
      <xloc>544</xloc>
      <yloc>112</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Query RangerMSP modified Crmemployee (cards) table</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${RangerMSP-ds}</connection>
    <execute_each_row>N</execute_each_row>
    <lookup>Get Last Crmemployee</lookup>
    <limit>0</limit>
    <sql>SELECT recid,accountstatus,bcrecid,city,kind,cardid3,company,createdate,updatedate,title,email1,contact,assigncardid from cards where entitykind=4 and KIND='$$***WORKER***$$'  and RECID is not null AND UPDATEDATE > ?</sql>
    <variables_active>Y</variables_active>
    <attributes/>
    <GUI>
      <xloc>544</xloc>
      <yloc>208</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Update Job/TFLogging</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>UNWIND $taskparams as t
WITH t,timestamp() as tfstart,trim(replace(t.jobname,'Parent Job Name',t.transname)) as jobname
MATCH (l:N4jlogging {jobname:jobname})
SET l.lasttfrun=tfstart,l.jobname=jobname,l.transname=t.transname,l.jobstatus='running',l.tdir=t.tdir,l.tfilename=t.tfilename,l.jdir=t.jdir,l.jfilename=t.jfilename
RETURN apoc.date.format(l.lastjobrun,'ms',"yyyy-MM-dd'T'HH:mm:ss",'CST') as jobstart,l.jobname
;</cypher>
    <batch_size/>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>taskparams</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>jobname</parameter>
        <field>jobname</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>transname</parameter>
        <field>transname</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>tdir</parameter>
        <field>tdir</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>jdir</parameter>
        <field>jdir</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>jfilename</parameter>
        <field>jfilename</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>tfilename</parameter>
        <field>tfilename</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns>
      <return>
        <name>jobstart</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>l.jobname</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>l.transname</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>400</xloc>
      <yloc>672</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
