<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>RangerMSP-new-company-nodes</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <pipeline_status>0</pipeline_status>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2020/01/03 22:40:31.737</created_date>
    <modified_user>admin</modified_user>
    <modified_date>2020/01/05 12:32:41.443</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>Query new RangerMSP Company (cards) table</from>
      <to>Create (:Company) labels for new companies</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get last :Company</from>
      <to>Query new RangerMSP Company (cards) table</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>Create (:Company) labels for new companies</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>UNWIND $companies as row
MATCH (r:Recordstatus{state:row.accountstatus})
OPTIONAL MATCH (dc1:Rangercontract {recid:row.bcrecid})
OPTIONAL MATCH (dc:Rangercontract {acctrecid:coalesce(row.bcrecid,'None Provided')})
OPTIONAL MATCH (m:Rangeremployee {recid:row.assigncardid})
MERGE (a:Company {acctrecid:row.recid})
ON CREATE
set a.city=row.city,a.name=row.company,a.createdon=datetime(row.createdate).epochmillis,a.updatedon=datetime(row.updatedate).epochmillis,a.defaultcontract=row.bcrecid
MERGE (a)-[:ACCOUNT_STATE]->(r)
FOREACH (ignoreMe in CASE WHEN m.name IS NOT NULL THEN [1] ELSE [] END | MERGE (a)-[:ACCOUNT_MANAGER]->(m))
FOREACH (ignoreMe in CASE WHEN dc.recid IS NOT NULL THEN [1] ELSE [] END | MERGE (a)-[:USES_DEFAULT_CONTRACT]->(dc))
// SET date for last new ticket
WITH datetime(row.updatedate).epochmillis as lastnew
MATCH (cdl:Rangerdataload {name:'RangerMSP'})
FOREACH (ignoreMe in CASE WHEN lastnew > cdl.lastnewcompany or cdl.lastnewcompany IS NULL THEN [1] ELSE [] END | SET cdl.lastnewcompany=lastnew)
;
</cypher>
    <batch_size>500</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>companies</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>recid</parameter>
        <field>recid</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>accountstatus</parameter>
        <field>accountstatus</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>bcrecid</parameter>
        <field>bcrecid</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>city</parameter>
        <field>city</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>kind</parameter>
        <field>kind</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>cardid3</parameter>
        <field>cardid3</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>company</parameter>
        <field>company</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>createdate</parameter>
        <field>createdate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>updatedate</parameter>
        <field>updatedate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>assigncardid</parameter>
        <field>assigncardid</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns>
      <return>
        <name>company</name>
        <type>String</type>
        <source_type/>
      </return>
      <return>
        <name>recid</name>
        <type>String</type>
        <source_type/>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>848</xloc>
      <yloc>272</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get last :Company</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>MATCH (cdl:Rangerdataload {name:'RangerMSP'})
WITH coalesce(cdl.lastnewcompany,0) as lastnewcompany,cdl
WITH apoc.date.format(lastnewcompany,'ms','yyyy-MM-dd HH:mm:ss.sss') AS lastnewcompany
//RETURN '1990-08-14 14:34:40.040' as lastnewcompany
RETURN lastnewcompany
;</cypher>
    <batch_size/>
    <read_only>Y</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map>days</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns>
      <return>
        <name>lastnewcompany</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>288</xloc>
      <yloc>272</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Query new RangerMSP Company (cards) table</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${RangerMSP-ds}</connection>
    <execute_each_row>N</execute_each_row>
    <lookup>Get last :Company</lookup>
    <limit>0</limit>
    <sql>${newcompanyrangerquery}</sql>
    <variables_active>Y</variables_active>
    <attributes/>
    <GUI>
      <xloc>528</xloc>
      <yloc>272</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
