<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>RangerMSP-update-Opportunity-nodes</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <pipeline_status>0</pipeline_status>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2020/01/03 22:40:31.737</created_date>
    <modified_user>admin</modified_user>
    <modified_date>2020/01/05 12:32:41.443</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>Query RangerMSP Opportunity (opps) table</from>
      <to>Create (:Opportunity) nodes for new opportunities</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get Opportunity (last new)</from>
      <to>Query RangerMSP Opportunity (opps) table</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get Last :Rangerdoc</from>
      <to>Query RangerMSP docs</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Query RangerMSP docs</from>
      <to>Edit (:Contact) nodes for modified contacts 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Query RangerMSPtasks</from>
      <to>Edit (:Contact) nodes for modified contacts 2 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get Last :Rangertask</from>
      <to>Query RangerMSPtasks</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get job variables</from>
      <to>Update Job/TFLogging</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>Create (:Opportunity) nodes for new opportunities</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>
UNWIND $opps as row
OPTIONAL MATCH (a:Company{acctrecid:row.cardid})
OPTIONAL MATCH (e:Crmemployee{acctrecid:row.workerid})
OPTIONAL MATCH (ok:Oppkind {name:row.kind})
OPTIONAL MATCH (os:Oppstage {id:ToInteger(split(row.stage,' ')[0])})
OPTIONAL MATCH (oss:Oppstatus {id:row.status})
OPTIONAL MATCH (osrc:Oppsource {name:row.source})
OPTIONAL MATCH (or:Oppreason {name:row.reason})
OPTIONAL MATCH (cu:Crmemployee {acctrecid:row.createuser})
OPTIONAL MATCH (uu:Crmemployee {acctrecid:row.updateuser})
MERGE (o:Opportunity {recid:row.recid})
SET o.probability=row.probability,o.name=row.name,o.createdon=datetime(row.createdate).epochmillis,o.opened=datetime(row.opendate).epochmillis,o.estimated=datetime(row.estdate).epochmillis,
o.closed=datetime(row.closedate).epochmillis,o.updatedon=datetime(row.updatedate).epochmillis,o.region=row.region,o.createdby=coalesce(cu.name,row.createuser),o.updatedby=coalesce(uu.name,row.updateuser),o.description=trim(left(row.description,150))
FOREACH (ignoreMe in CASE WHEN coalesce(o.createdon,0) > coalesce(o.lastupdate,0) THEN [1] ELSE [] END | SET o.lastupdate=o.createdon)
FOREACH (ignoreMe in CASE WHEN coalesce(o.updatedon,0) > coalesce(o.lastupdate,0) THEN [1] ELSE [] END | SET o.lastupdate=o.updatedon)
//OPTIONAL MATCH (cu:Crmemployee {acctrecid:row.createuserid})
//MERGE (c:Contact {acctrecid:row.recid})
//ON CREATE SET c.company=row.company,c.title=row.title,c.email=trim(toLower(row.email1)),c.name=row.contact,c.createdon=datetime(row.createdate).epochmillis,c.updatedon=datetime(row.updatedate).epochmillis,c.createuser=cu.name
//MERGE (c)-[:ACCOUNT_STATE]->(r)
//WITH r,c,row
//MATCH (a:Company {acctrecid:row.assigncardid})
FOREACH (ignoreMe in CASE WHEN e.name IS NOT NULL THEN [1] ELSE [] END | MERGE (e)-[:MANAGES_OPP]->(o))
FOREACH (ignoreMe in CASE WHEN a.name IS NOT NULL THEN [1] ELSE [] END | MERGE (o)-[:OPP_FOR]->(a))
FOREACH (ignoreMe in CASE WHEN ok.name IS NOT NULL THEN [1] ELSE [] END | MERGE (o)-[:OPP_KIND]->(ok))
FOREACH (ignoreMe in CASE WHEN os.name IS NOT NULL THEN [1] ELSE [] END | MERGE (o)-[:OPP_STAGE]->(os))
FOREACH (ignoreMe in CASE WHEN or.name IS NOT NULL THEN [1] ELSE [] END | MERGE (o)-[:OPP_REASON]->(or))
FOREACH (ignoreMe in CASE WHEN oss.name IS NOT NULL THEN [1] ELSE [] END | MERGE (o)-[:OPP_STATUS]->(oss))
FOREACH (ignoreMe in CASE WHEN osrc.name IS NOT NULL THEN [1] ELSE [] END | MERGE (o)-[:OPP_SOURCE]->(osrc))
RETURN a.name as Company,e.name as Manager,datetime(row.createdate).epochmillis as created,datetime(row.opendate).epochmillis as opened,datetime(row.estdate).epochmillis as estimated,datetime(row.closedate).epochmillis as closed</cypher>
    <batch_size>100</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>opps</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>recid</parameter>
        <field>recid</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>name</parameter>
        <field>name</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>cardid</parameter>
        <field>cardid</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>workerid</parameter>
        <field>workerid</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>opendate</parameter>
        <field>opendate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>estdate</parameter>
        <field>estdate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>closedate</parameter>
        <field>closedate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>probability</parameter>
        <field>probability</field>
        <type>Float</type>
      </mapping>
      <mapping>
        <parameter>stage</parameter>
        <field>stage</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>status</parameter>
        <field>status</field>
        <type>Integer</type>
      </mapping>
      <mapping>
        <parameter>kind</parameter>
        <field>kind</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>reason</parameter>
        <field>reason</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>user1</parameter>
        <field>user1</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>user2</parameter>
        <field>user2</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>user3</parameter>
        <field>user3</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>region</parameter>
        <field>region</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>createdate</parameter>
        <field>createdate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>createuser</parameter>
        <field>createuser</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>updatedate</parameter>
        <field>updatedate</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>updateuser</parameter>
        <field>updateuser</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>source</parameter>
        <field>source</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>contactid</parameter>
        <field>contactid</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>description</parameter>
        <field>description</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns>
      <return>
        <name>Company</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>Manager</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>created</name>
        <type>Integer</type>
        <source_type>Integer</source_type>
      </return>
      <return>
        <name>opened</name>
        <type>Integer</type>
        <source_type>Integer</source_type>
      </return>
      <return>
        <name>estimated</name>
        <type>Integer</type>
        <source_type>Integer</source_type>
      </return>
      <return>
        <name>closed</name>
        <type>Integer</type>
        <source_type>Integer</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>864</xloc>
      <yloc>96</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Edit (:Contact) nodes for modified contacts 2</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>UNWIND $docs as row
MERGE (r:Rangerdoc {recid:row.RECID}) SET r.name=row.DOCUMENTNAME,r.shortname=row.DOCUMENTNAMESHORT,r.description=trim(row.DESCRIPTION),r.createdon=datetime(row.CREATEDATE).epochmillis,r.updatedon=datetime(row.UPDATEDATE).epochmillis
WITH row,r
MATCH (o:Opportunity {recid:row.LINKRECID})
MERGE (r)&lt;-[:HISTORY_DOCUMENT_ENTRY]-(o)
FOREACH (ignoreMe in CASE WHEN coalesce(r.createdon,0) > coalesce(o.lastupdate,0) THEN [1] ELSE [] END | SET o.lastupdate=r.createdon)
FOREACH (ignoreMe in CASE WHEN coalesce(r.updatedon,0) > coalesce(o.lastupdate,0) THEN [1] ELSE [] END | SET o.lastupdate=r.updatedon)
RETURN row.RECID,o.recid
</cypher>
    <batch_size>100</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>docs</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>DOCUMENTNAME</parameter>
        <field>DOCUMENTNAME</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>DOCUMENTNAMESHORT</parameter>
        <field>DOCUMENT_NAME_SHORT</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>DESCRIPTION</parameter>
        <field>DESCRIPTION</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>CREATEDATE</parameter>
        <field>CREATE_DATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>UPDATEDATE</parameter>
        <field>UPDATE_DATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>RECID</parameter>
        <field>RECID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>LINKRECID</parameter>
        <field>LINKRECID</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns>
      <return>
        <name>row.RECID</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>o.recid</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>864</xloc>
      <yloc>192</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Edit (:Contact) nodes for modified contacts 2 2</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>UNWIND $events as row
MERGE (r:Rangerevent {recid:row.RECID})
//SET r.name=row.DOCUMENTNAME,r.shortname=row.DOCUMENTNAMESHORT,r.description=row.DESCRIPTION,r.createdon=datetime(row.CREATEDATE).epochmillis,r.updatedon=datetime(row.UPDATEDATE).epochmillis
SET r.text=trim(row.FREETEXT),r.done=row.DONE,r.donedate=DATETIME(row.DONEDATE).epochmillis,r.cancelled=row.CANCELD,r.docid=row.DOCID,r.createdon=datetime(row.CREATEDATE).epochmillis,r.updatedon=datetime(row.UPDATEDATE).epochmillis
WITH row,r
MATCH (o:Opportunity {recid:row.LINKRECID})
MERGE (r)&lt;-[:HISTORY_EVENT_ENTRY]-(o)
FOREACH (ignoreMe in CASE WHEN coalesce(r.createdon,0) > coalesce(o.lastupdate,0) THEN [1] ELSE [] END | SET o.lastupdate=r.createdon)
RETURN row.RECID,o.recid
</cypher>
    <batch_size>100</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>events</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>RECID</parameter>
        <field>RECID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>REMIND1ACTIVE</parameter>
        <field>REMIND1_ACTIVE</field>
        <type>Boolean</type>
      </mapping>
      <mapping>
        <parameter>REMIND1TIMESTAMP</parameter>
        <field>REMIND1_TIMESTAMP</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>REMIND2ACTIVE</parameter>
        <field>REMIND2_ACTIVE</field>
        <type>Boolean</type>
      </mapping>
      <mapping>
        <parameter>REMIND2TIMESTAMP</parameter>
        <field>REMIND2_TIMESTAMP</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>UPDATETIMESTAMP</parameter>
        <field>UPDATE_TIMESTAMP</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>UPDATEUSER</parameter>
        <field>UPDATE_USER</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>WORKERID</parameter>
        <field>WORKER_ID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>FREETEXT</parameter>
        <field>FREETEXT</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>DONE</parameter>
        <field>DONE</field>
        <type>Boolean</type>
      </mapping>
      <mapping>
        <parameter>DONEDATE</parameter>
        <field>DONE_DATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>CANCELD</parameter>
        <field>CANCELD</field>
        <type>Boolean</type>
      </mapping>
      <mapping>
        <parameter>TASKSTATUS</parameter>
        <field>TASK_STATUS</field>
        <type>Integer</type>
      </mapping>
      <mapping>
        <parameter>TASKDUEDATE</parameter>
        <field>TASK_DUE_DATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>CREATEDATE</parameter>
        <field>CREATEDATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>DOCID</parameter>
        <field>DOCID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>CREATEUSERID</parameter>
        <field>CREATEUSERID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>LINKRECID</parameter>
        <field>LINKRECID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>CONTACTID</parameter>
        <field>CONTACTID</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns>
      <return>
        <name>row.RECID</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>o.recid</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>864</xloc>
      <yloc>272</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get Last :Rangerdoc</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>MATCH (cdl:Crmdataload {name:'CommitCRM'})
OPTIONAL MATCH (l:Rangerdoc)
WITH max(coalesce(l.createdon,0)) as lastnewdoc, max(coalesce(l.updatedon,0)) as lastmodifieddoc,cdl
WITH COLLECT(lastnewdoc)+COLLECT(lastmodifieddoc)+cdl.crminit as tstamps
UNWIND tstamps as ts
WITH min(ts) as lastmodifieddoc
WITH apoc.date.format(coalesce(lastmodifieddoc,0),'ms','yyyy-MM-dd HH:mm:ss.sss','CST') AS lastmodifieddoc
//RETURN '1990-08-14 14:34:40.040' as lastmodifieddoc
RETURN lastmodifieddoc
;

</cypher>
    <batch_size/>
    <read_only>Y</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map/>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns>
      <return>
        <name>lastmodifieddoc</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>320</xloc>
      <yloc>192</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get Last :Rangertask</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>MATCH (cdl:Crmdataload {name:'CommitCRM'})
OPTIONAL MATCH (l:Rangertask)
WITH max(coalesce(l.createdon,0)) as lastnewtask, max(coalesce(l.updatedon,0)) as lastmodifiedtask,cdl
WITH COLLECT(lastnewtask)+COLLECT(lastmodifiedtask)+cdl.crminit as tstamps
UNWIND tstamps as ts
WITH min(ts) as lastmodifiedtask
WITH apoc.date.format(coalesce(lastmodifiedtask,0),'ms','yyyy-MM-dd HH:mm:ss.sss','CST') AS lastmodifiedtask
//RETURN '1990-08-14 14:34:40.040' as lastmodifiedtask
RETURN lastmodifiedtask
;

</cypher>
    <batch_size/>
    <read_only>Y</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map/>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns>
      <return>
        <name>lastcreatedtask</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>320</xloc>
      <yloc>272</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get Opportunity (last new)</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>MATCH (cdl:Crmdataload {name:'CommitCRM'})
OPTIONAL MATCH (l:Opportunity)
WITH max(coalesce(l.createdon,0)) as lastnewopp, max(coalesce(l.updatedon,0)) as lastmodifiedopp,cdl
WITH COLLECT(lastnewopp)+COLLECT(lastmodifiedopp)+cdl.crminit as tstamps
UNWIND tstamps as ts
WITH min(ts) as lastmodifiedopp
WITH apoc.date.format(coalesce(lastmodifiedopp,0),'ms','yyyy-MM-dd HH:mm:ss.sss','CST') AS lastmodifiedopp
//RETURN '1990-08-14 14:34:40.040' as lastmodifiedopp
RETURN lastmodifiedopp
;
</cypher>
    <batch_size/>
    <read_only>Y</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map/>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns>
      <return>
        <name>lastnewopp</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>320</xloc>
      <yloc>96</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get job variables</name>
    <type>GetVariable</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>jobname</name>
        <variable> ${Internal.Workflow.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>transname</name>
        <variable>${Internal.Pipeline.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>tdir</name>
        <variable>${Internal.Pipeline.Filename.Folder}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>jdir</name>
        <variable>${Internal.Workflow.Filename.Folder}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>jfilename</name>
        <variable>${Internal.Workflow.Filename.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>tfilename</name>
        <variable>${Internal.Pipeline.Filename.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>128</xloc>
      <yloc>384</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Query RangerMSP Opportunity (opps) table</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${RangerMSP-ds}</connection>
    <execute_each_row>N</execute_each_row>
    <lookup>Get Opportunity (last new)</lookup>
    <limit>0</limit>
    <sql>SELECT recid,name,cardid,CAST(description as SQL_VARCHAR) as description,workerid,opendate,estdate,closedate,probability,stage,status,kind,reason,user1,user2,user3,region,createdate,createuser,updatedate,updateuser,source,contactid from opps WHERE CREATEDATE > ?</sql>
    <variables_active>Y</variables_active>
    <attributes/>
    <GUI>
      <xloc>560</xloc>
      <yloc>96</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Query RangerMSP docs</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${RangerMSP-ds}</connection>
    <execute_each_row>N</execute_each_row>
    <lookup>Get Last :Rangerdoc</lookup>
    <limit>0</limit>
    <sql>SELECT  CAST(DOCUMENT_NAME AS SQL_VARCHAR) AS DOCUMENTNAME,DOCUMENT_NAME_SHORT,CAST(DOCUMENT_DESC AS SQL_VARCHAR) AS DESCRIPTION,CREATE_DATE,UPDATE_DATE,RECID,LINKRECID FROM docs WHERE LINKRECID LIKE  'OPP%' AND CREATE_DATE > ?</sql>
    <variables_active>Y</variables_active>
    <attributes/>
    <GUI>
      <xloc>560</xloc>
      <yloc>192</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Query RangerMSPtasks</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${RangerMSP-ds}</connection>
    <execute_each_row>N</execute_each_row>
    <lookup>Get Last :Rangertask</lookup>
    <limit>0</limit>
    <sql>SELECT [RECID]
      ,[REMIND1_ACTIVE]
      ,[REMIND1_TIMESTAMP]
      ,[REMIND2_ACTIVE]
      ,[REMIND2_TIMESTAMP]
      ,[UPDATE_TIMESTAMP]
      ,[UPDATE_USER]
      ,[WORKER_ID]
      ,CAST([FREE_TEXT] as SQL_VARCHAR) AS FREETEXT
      ,[DONE]
      ,[DONE_DATE]
      ,[CANCELD]
      ,[TASK_STATUS]
      ,[TASK_DUE_DATE]
      ,[CREATEDATE]
      ,[DOCID]
      ,[CREATEUSERID]
      ,[LINKRECID]
      ,[CONTACTID]
       FROM Events WHERE LINKRECID LIKE 'OPP%' AND CREATEDATE > ?</sql>
    <variables_active>Y</variables_active>
    <attributes/>
    <GUI>
      <xloc>560</xloc>
      <yloc>272</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Update Job/TFLogging</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>UNWIND $taskparams as t
WITH t,timestamp() as tfstart,trim(replace(t.jobname,'Parent Job Name',t.transname)) as jobname
MATCH (l:N4jlogging {jobname:jobname})
SET l.lasttfrun=tfstart,l.jobname=jobname,l.transname=t.transname,l.jobstatus='running',l.tdir=t.tdir,l.tfilename=t.tfilename,l.jdir=t.jdir,l.jfilename=t.jfilename
RETURN apoc.date.format(l.lastjobrun,'ms',"yyyy-MM-dd'T'HH:mm:ss",'CST') as jobstart,l.jobname
;</cypher>
    <batch_size/>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>taskparams</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>jobname</parameter>
        <field>jobname</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>transname</parameter>
        <field>transname</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>tdir</parameter>
        <field>tdir</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>jdir</parameter>
        <field>jdir</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>jfilename</parameter>
        <field>jfilename</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>tfilename</parameter>
        <field>tfilename</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns>
      <return>
        <name>jobstart</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>l.jobname</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>l.transname</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>304</xloc>
      <yloc>384</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
