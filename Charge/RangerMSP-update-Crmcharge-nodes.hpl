<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>RangerMSP-update-Crmcharge-nodes</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <pipeline_status>0</pipeline_status>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2020/02/07 09:52:22.693</created_date>
    <modified_user>-</modified_user>
    <modified_date>2020/02/07 09:52:22.693</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>Query Charges (slips) table</from>
      <to>Create new (:Crmcharge) nodes</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Query CommitCRM Mod Charges (slips) table</from>
      <to>Modify (:Crmcharge) nodes</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get job variables</from>
      <to>Update Job/TFLogging</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get last :Crmcharge</from>
      <to>Query Charges (slips) table</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get last :Crmcharge</from>
      <to>Query CommitCRM Mod Charges (slips) table</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>Create new (:Crmcharge) nodes</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>UNWIND $charges as row
MERGE (c:Crmcharge {recid:row.RECID})
ON CREATE SET c.date=row.SLIPDATE,c.description=row.DESCRIPTION,c.hours=row.HOURSAMOUNT,c.quantity=row.QUANTITY,c.price=row.PRICE,c.createdon=datetime(row.CREATEDATE).epochmillis,c.updatedon=datetime(row.UPDATEDATE).epochmillis
WITH *
OPTIONAL MATCH (e:Crmemployee {acctrecid:coalesce(row.WORKERID,"Nothing")}) 
OPTIONAL MATCH (t:Ticket {recid:coalesce(row.TICKETID,"Nothing")}) 
OPTIONAL MATCH (i:Crmitem {recid:coalesce(row.ITEMID,"Nothing")})
OPTIONAL MATCH (uu:Crmemployee {acctrecid:coalesce(row.UPDATEUSER,"Nothing")})
OPTIONAL MATCH (cu:Crmemployee {acctrecid:coalesce(row.CREATEUSER,"Nothing")})
OPTIONAL MATCH (ct:Contact {acctrecid:coalesce(row.CONTACTID,"Nothing")})
OPTIONAL MATCH (bc:Crmcontract {recid:coalesce(row.BCRECID,"Nothing")})
OPTIONAL MATCH (bk:Billkind {code:coalesce(row.BILLKIND,"Nothing")})
OPTIONAL MATCH (bs:Billstage {code:coalesce(row.STAGE,"Nothing")})
FOREACH (ignoreMe in CASE WHEN bk.code IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:IS_BILLABLE]->(bk))
FOREACH (ignoreMe in CASE WHEN bs.code IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:BILLING_STAGE]->(bs))
FOREACH (ignoreMe in CASE WHEN e.acctrecid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:ENTRY_FOR]->(e))
FOREACH (ignoreMe in CASE WHEN t.recid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:PART_OF_TICKET]->(t))
FOREACH (ignoreMe in CASE WHEN i.recid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:INCLUDES_ITEM]->(i))
FOREACH (ignoreMe in CASE WHEN uu.acctrecid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:LAST_UPDATED_BY]->(uu))
FOREACH (ignoreMe in CASE WHEN cu.acctrecid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:CREATED_BY]->(cu))
FOREACH (ignoreMe in CASE WHEN ct.recid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:CLIENT_CONTACT]->(ct))
FOREACH (ignoreMe in CASE WHEN bc.recid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:UNDER_CONTRACT]->(bc))
;</cypher>
    <batch_size>1000</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>charges</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>BCCODE</parameter>
        <field>BCCODE</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>BCRECID</parameter>
        <field>BCRECID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>BILLKIND</parameter>
        <field>BILLKIND</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>CARDID</parameter>
        <field>CARDID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>CONTACTID</parameter>
        <field>CONTACTID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>CREATEDATE</parameter>
        <field>CREATEDATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>CREATEUSER</parameter>
        <field>CREATEUSER</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>DESCRIPTION</parameter>
        <field>DESCRIPTION</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>HOURSAMOUNT</parameter>
        <field>HOURSAMOUNT</field>
        <type>Float</type>
      </mapping>
      <mapping>
        <parameter>ITEMID</parameter>
        <field>ITEMID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>PRICE</parameter>
        <field>PRICE</field>
        <type>Float</type>
      </mapping>
      <mapping>
        <parameter>QUANTITY</parameter>
        <field>QUANTITY</field>
        <type>Float</type>
      </mapping>
      <mapping>
        <parameter>RECID</parameter>
        <field>RECID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>SLIPDATE</parameter>
        <field>SLIPDATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>STAGE</parameter>
        <field>STAGE</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>TICKETID</parameter>
        <field>TICKETID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>TOTAL</parameter>
        <field>TOTAL</field>
        <type>Float</type>
      </mapping>
      <mapping>
        <parameter>UPDATEDATE</parameter>
        <field>UPDATEDATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>UPDATEUSER</parameter>
        <field>UPDATEUSER</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>USER1</parameter>
        <field>USER1</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>WORKERID</parameter>
        <field>WORKERID</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns/>
    <attributes/>
    <GUI>
      <xloc>592</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get job variables</name>
    <type>GetVariable</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>jobname</name>
        <variable> ${Internal.Workflow.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>transname</name>
        <variable>${Internal.Pipeline.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>tdir</name>
        <variable>${Internal.Pipeline.Filename.Folder}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>jdir</name>
        <variable>${Internal.Workflow.Filename.Folder}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>jfilename</name>
        <variable>${Internal.Workflow.Filename.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
      <field>
        <name>tfilename</name>
        <variable>${Internal.Pipeline.Filename.Name}</variable>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>144</xloc>
      <yloc>320</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Get last :Crmcharge</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>MATCH (cdl:Crmdataload {name:'CommitCRM'})
OPTIONAL MATCH (l:Crmcharge)
WITH max(coalesce(l.createdon,0)) as lastnewcharge, max(coalesce(l.updatedon,0)) as lastmodifiedcharge,cdl
WITH COLLECT(lastnewcharge)+COLLECT(lastmodifiedcharge)+cdl.crminit as tstamps,cdl
UNWIND tstamps as ts
WITH min(ts) as lastmodifiedcharge,cdl
WITH apoc.date.format(coalesce(lastmodifiedcharge,0),'ms','yyyy-MM-dd HH:mm:ss.sss','CST') AS lastmodifiedcharge,apoc.date.format(coalesce(cdl.chargelimiter,0),'ms','yyyy-MM-dd HH:mm:ss.sss','CST') AS historylimit
//RETURN '1990-08-14 14:34:40.040' as lastmodifiedcharge
RETURN lastmodifiedcharge,historylimit
;</cypher>
    <batch_size/>
    <read_only>Y</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map/>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns>
      <return>
        <name>lastnewcharge</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>historylimit</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>128</xloc>
      <yloc>128</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Modify (:Crmcharge) nodes</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>UNWIND $charges as row
MATCH (c:Crmcharge {recid:row.RECID})
OPTIONAL MATCH (e:Crmemployee {acctrecid:row.WORKERID})
OPTIONAL MATCH (t:Ticket {recid:row.TICKETID})
OPTIONAL MATCH (i:Crmitem {recid:row.ITEMID})
OPTIONAL MATCH (uu:Crmemployee {acctrecid:row.UPDATEUSER})
OPTIONAL MATCH (cu:Crmemployee {acctrecid:row.CREATEUSER})
OPTIONAL MATCH (ct:Contact {acctrecid:row.CONTACTID})
OPTIONAL MATCH (bc:Crmcontract {recid:row.BCRECID})
OPTIONAL MATCH (bk:Billkind {code:row.BILLKIND})
OPTIONAL MATCH (bs:Billstage {code:row.STAGE})
OPTIONAL MATCH (c)-[efr:ENTRY_FOR]->(oe:Crmemployee)
OPTIONAL MATCH (c)-[potr:PART_OF_TICKET]->(ot:Ticket)
OPTIONAL MATCH (c)-[iir:INCLUDES_ITEM]->(oi:Crmitem)
OPTIONAL MATCH (c)-[lubr:LAST_UPDATED_BY]->(oue:Crmemployee)
OPTIONAL MATCH (c)-[cbr:CREATED_BY]->(oce:Crmemployee)
OPTIONAL MATCH (c)-[ccr:CLIENT_CONTACT]->(occ:Contact)
OPTIONAL MATCH (c)-[ucr:UNDER_CONTRACT]->(oc:Crmcontract)
OPTIONAL MATCH (c)-[ibr:IS_BILLABLE]->(obk:Billkind)
OPTIONAL MATCH (c)-[bsr:BILLING_STAGE]->(obs:Billstage)
FOREACH (ignoreMe in CASE WHEN (row.WORKERID &lt;&gt; oe.acctrecid) THEN [1] ELSE [] END | DELETE efr)
FOREACH (ignoreMe in CASE WHEN (row.TICKETID &lt;&gt; ot.recid) THEN [1] ELSE [] END | DELETE potr)
FOREACH (ignoreMe in CASE WHEN (row.ITEMID &lt;&gt; oi.recid) THEN [1] ELSE [] END | DELETE iir)
FOREACH (ignoreMe in CASE WHEN (row.UPDATEUSER &lt;&gt; oue.acctrecid) THEN [1] ELSE [] END | DELETE lubr)
FOREACH (ignoreMe in CASE WHEN (row.CREATEUSER &lt;&gt; oce.acctrecid) THEN [1] ELSE [] END | DELETE cbr)
FOREACH (ignoreMe in CASE WHEN (row.CONTACTID &lt;&gt; occ.acctrecid) THEN [1] ELSE [] END | DELETE ccr)
FOREACH (ignoreMe in CASE WHEN coalesce(row.BCRECID,'isnull') &lt;&gt; coalesce(oc.recid,'isnull') THEN [1] ELSE [] END | DELETE ucr)
FOREACH (ignoreMe in CASE WHEN (row.BILLKIND &lt;&gt; obk.code) THEN [1] ELSE [] END | DELETE ibr)
FOREACH (ignoreMe in CASE WHEN (row.STAGE &lt;&gt; obs.code) THEN [1] ELSE [] END | DELETE bsr)
FOREACH (ignoreMe in CASE WHEN e.acctrecid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:ENTRY_FOR]->(e))
FOREACH (ignoreMe in CASE WHEN t.recid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:PART_OF_TICKET]->(t))
FOREACH (ignoreMe in CASE WHEN i.recid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:INCLUDES_ITEM]->(i))
FOREACH (ignoreMe in CASE WHEN uu.acctrecid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:LAST_UPDATED_BY]->(uu))
FOREACH (ignoreMe in CASE WHEN cu.acctrecid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:CREATED_BY]->(cu))
FOREACH (ignoreMe in CASE WHEN ct.recid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:CLIENT_CONTACT]->(ct))
FOREACH (ignoreMe in CASE WHEN bc.recid IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:UNDER_CONTRACT]->(bc))
FOREACH (ignoreMe in CASE WHEN bk.code IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:IS_BILLABLE]->(bk))
FOREACH (ignoreMe in CASE WHEN bs.code IS NOT NULL THEN [1] ELSE [] END | MERGE (c)-[:BILLING_STAGE]->(bs))
FOREACH (ignoreMe in CASE WHEN coalesce(c.date,"isNothing") &lt;&gt; coalesce(row.SLIPDATE,"isNothing") THEN [1] ELSE [] END | SET c.date=datetime(row.SLIPDATE).epochmillis)
FOREACH (ignoreMe in CASE WHEN coalesce(c.description,"isNothing") &lt;&gt; coalesce(row.DESCRIPTION,"isNothing") THEN [1] ELSE [] END | SET c.description=row.DESCRIPTION)
FOREACH (ignoreMe in CASE WHEN coalesce(c.hours,"isNothing") &lt;&gt; coalesce(row.HOURSAMOUNT,"isNothing") THEN [1] ELSE [] END | SET c.hours=row.HOURSAMOUNT)
FOREACH (ignoreMe in CASE WHEN coalesce(c.quantity,"isNothing") &lt;&gt; coalesce(row.QUANTITY,"isNothing") THEN [1] ELSE [] END | SET c.quantity=row.QUANTITY)
FOREACH (ignoreMe in CASE WHEN coalesce(c.price,"isNothing") &lt;&gt; coalesce(row.PRICE,"isNothing") THEN [1] ELSE [] END | SET c.price=row.PRICE)
FOREACH (ignoreMe in CASE WHEN coalesce(c.createdon,"isNothing") &lt;&gt; coalesce(row.CREATEDATE,"isNothing") THEN [1] ELSE [] END | SET c.createdon=datetime(row.CREATEDATE).epochmillis)
FOREACH (ignoreMe in CASE WHEN coalesce(c.updatedon,"isNothing") &lt;&gt; coalesce(row.UPDATEDATE,"isNothing") THEN [1] ELSE [] END | SET c.updatedon=datetime(row.UPDATEDATE).epochmillis)
RETURN row.SLIPDATE,c.recid,c.description,row.BCRECID,oc.recid,bc.recid ORDER BY c.date
;</cypher>
    <batch_size>1000</batch_size>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>charges</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>BCCODE</parameter>
        <field>BCCODE</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>BCRECID</parameter>
        <field>BCRECID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>BILLKIND</parameter>
        <field>BILLKIND</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>CARDID</parameter>
        <field>CARDID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>CONTACTID</parameter>
        <field>CONTACTID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>CREATEDATE</parameter>
        <field>CREATEDATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>CREATEUSER</parameter>
        <field>CREATEUSER</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>DESCRIPTION</parameter>
        <field>DESCRIPTION</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>HOURSAMOUNT</parameter>
        <field>HOURSAMOUNT</field>
        <type>Float</type>
      </mapping>
      <mapping>
        <parameter>ITEMID</parameter>
        <field>ITEMID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>PRICE</parameter>
        <field>PRICE</field>
        <type>Float</type>
      </mapping>
      <mapping>
        <parameter>QUANTITY</parameter>
        <field>QUANTITY</field>
        <type>Float</type>
      </mapping>
      <mapping>
        <parameter>RECID</parameter>
        <field>RECID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>SLIPDATE</parameter>
        <field>SLIPDATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>STAGE</parameter>
        <field>STAGE</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>TICKETID</parameter>
        <field>TICKETID</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>TOTAL</parameter>
        <field>TOTAL</field>
        <type>Float</type>
      </mapping>
      <mapping>
        <parameter>UPDATEDATE</parameter>
        <field>UPDATEDATE</field>
        <type>LocalDateTime</type>
      </mapping>
      <mapping>
        <parameter>UPDATEUSER</parameter>
        <field>UPDATEUSER</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>USER1</parameter>
        <field>USER1</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>WORKERID</parameter>
        <field>WORKERID</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns/>
    <attributes/>
    <GUI>
      <xloc>608</xloc>
      <yloc>192</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Query Charges (slips) table</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${RangerMSP-ds}</connection>
    <execute_each_row>N</execute_each_row>
    <lookup>Get last :Crmcharge</lookup>
    <limit>0</limit>
    <sql>SELECT RECID,SLIPDATE,WORKERID,CARDID,TICKETID,ITEMID,CAST(DESCRIPTION as SQL_VARCHAR) AS DESCRIPTION,HOURSAMOUNT,QUANTITY,PRICE,TOTAL,STAGE,BILLKIND,CREATEDATE,UPDATEDATE,UPDATEUSER,CREATEUSER,USER1,CONTACTID,BCRECID,BCCODE from slips WHERE CREATEDATE > ? AND CREATEDATE > ? ORDER BY CREATEDATE</sql>
    <variables_active>Y</variables_active>
    <attributes/>
    <GUI>
      <xloc>368</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Query CommitCRM Mod Charges (slips) table</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${RangerMSP-ds}</connection>
    <execute_each_row>N</execute_each_row>
    <lookup>Get last :Crmcharge</lookup>
    <limit>0</limit>
    <sql>SELECT RECID,SLIPDATE,WORKERID,CARDID,TICKETID,ITEMID,CAST(DESCRIPTION as SQL_VARCHAR) AS DESCRIPTION,HOURSAMOUNT,QUANTITY,PRICE,TOTAL,STAGE,BILLKIND,CREATEDATE,UPDATEDATE,UPDATEUSER,CREATEUSER,USER1,CONTACTID,BCRECID,BCCODE from slips WHERE UPDATEDATE > ? AND CREATEDATE > ? ORDER BY UPDATEDATE</sql>
    <variables_active>Y</variables_active>
    <attributes/>
    <GUI>
      <xloc>368</xloc>
      <yloc>192</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Update Job/TFLogging</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>UNWIND $taskparams as t
WITH t,timestamp() as tfstart,trim(replace(t.jobname,'Parent Job Name',t.transname)) as jobname
MATCH (l:N4jlogging {jobname:jobname})
SET l.lasttfrun=tfstart,l.jobname=jobname,l.transname=t.transname,l.jobstatus='running',l.tdir=t.tdir,l.tfilename=t.tfilename,l.jdir=t.jdir,l.jfilename=t.jfilename
RETURN apoc.date.format(l.lastjobrun,'ms',"yyyy-MM-dd'T'HH:mm:ss",'CST') as jobstart,l.jobname
;</cypher>
    <batch_size/>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>Y</unwind>
    <unwind_map>taskparams</unwind_map>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings>
      <mapping>
        <parameter>jobname</parameter>
        <field>jobname</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>transname</parameter>
        <field>transname</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>tdir</parameter>
        <field>tdir</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>jdir</parameter>
        <field>jdir</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>jfilename</parameter>
        <field>jfilename</field>
        <type>String</type>
      </mapping>
      <mapping>
        <parameter>tfilename</parameter>
        <field>tfilename</field>
        <type>String</type>
      </mapping>
    </mappings>
    <returns>
      <return>
        <name>jobstart</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>l.jobname</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>l.transname</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>320</xloc>
      <yloc>320</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Update ticket lastcharge</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>${graphdb-ds}</connection>
    <cypher>MATCH (tc:Ticketcategory)-[:TICKET_CATEGORY]-(t:Ticket)-[tsr:TICKET_STATUS]-(ts:Ticketstatus) where ts.statcode&lt;800
MATCH (t)-[:PART_OF_TICKET]-(cc:Crmcharge)
WITH t,max(cc.createdon) as maxcharge
WITH t,apoc.date.format(maxcharge,'ms',"yyyy-MM-dd'T'HH:mm:ss",'CST') as lastcharge
SET t.lastcharge=lastcharge
RETURN t.ticketnumber,lastcharge</cypher>
    <batch_size/>
    <read_only>N</read_only>
    <nr_retries_on_error/>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map/>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns/>
    <attributes/>
    <GUI>
      <xloc>528</xloc>
      <yloc>320</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
